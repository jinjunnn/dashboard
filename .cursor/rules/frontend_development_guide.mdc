# 前端开发指南

## 🎯 前端开发核心原则

### 📱 技术栈特定规范
- **框架**: Next.js 15 + TypeScript
- **样式**: Tailwind CSS + shadcn/ui  
- **状态管理**: React Hooks + Server Components
- **数据层**: Supabase + Redis缓存
- **构建工具**: Next.js内置构建系统

## ⚡ 快速开发流程

### 🚀 开发前准备（30秒）
```bash
# 1. 环境检查
npm run dev  # 确保开发服务器正常
# 2. 依赖检查  
npm install  # 确保依赖最新
# 3. 类型检查
npm run type-check  # 确保TypeScript无错误
```

### 🔄 开发过程规范

#### 📝 组件开发
1. **优先使用现有组件** - 检查 `src/components/ui/`
2. **遵循命名规范** - PascalCase组件名，kebab-case文件名
3. **TypeScript严格模式** - 所有props必须有类型定义
4. **响应式设计** - 使用Tailwind responsive classes

#### 🎨 样式规范
```typescript
// ✅ 推荐 - 使用Tailwind CSS
<div className="flex items-center justify-between p-4 bg-card rounded-lg">

// ❌ 避免 - 内联样式
<div style={{display: 'flex', padding: '16px'}}>
```

#### 🔌 API集成
```typescript
// ✅ 推荐 - 使用统一的服务层
import { signalsService } from '@/lib/services/signals-service'

// ❌ 避免 - 直接在组件中调用Supabase
import { supabase } from '@/lib/supabase/client'
```

## ✅ 完成后强制检查清单

### 🔴 1. 代码质量检查（强制）
```bash
# TypeScript编译检查
npm run type-check
# ESLint代码规范检查  
npm run lint
# 格式化代码
npm run format
```

### 🔴 2. 功能验证（强制）
```bash
# 开发服务器启动验证
npm run dev
# 生产构建验证
npm run build
# 生产模式启动验证
npm run start
```

### 🔴 3. 前端特有测试
- [ ] **页面路由测试** - 手动验证所有路由可访问
- [ ] **响应式测试** - 检查移动端和桌面端显示
- [ ] **交互测试** - 验证按钮、表单、导航功能
- [ ] **数据加载测试** - 确认API数据正确显示
- [ ] **错误边界测试** - 验证错误状态显示

### 🔴 4. 性能检查
- [ ] **构建大小** - 检查 `npm run build` 输出的包大小
- [ ] **首屏加载** - 验证首次加载时间合理
- [ ] **缓存策略** - 确认静态资源缓存正确
- [ ] **图片优化** - 使用Next.js Image组件

### 🔴 5. SEO和可访问性
- [ ] **页面标题** - 每个页面有意义的title
- [ ] **meta描述** - 重要页面有meta description
- [ ] **语义化HTML** - 使用正确的HTML标签
- [ ] **键盘导航** - 可以通过键盘操作

## 🚨 前端特有错误处理

### 常见错误类型
1. **Hydration错误** - 服务端和客户端渲染不一致
2. **路由错误** - 动态路由参数问题
3. **状态管理错误** - useEffect依赖项问题
4. **样式冲突** - Tailwind类名冲突

### 错误排查步骤
```bash
# 1. 清理缓存
rm -rf .next && npm run dev

# 2. 检查浏览器控制台
# 查看Network、Console、React DevTools

# 3. 检查服务端日志
# 查看终端输出的Next.js日志
```

## 📱 移动端开发规范

### 响应式断点
```css
/* Tailwind默认断点 */
sm: 640px   /* 小屏幕 */
md: 768px   /* 中等屏幕 */  
lg: 1024px  /* 大屏幕 */
xl: 1280px  /* 超大屏幕 */
```

### 移动端优化
- [ ] **触摸友好** - 按钮至少44px点击区域
- [ ] **加载状态** - 数据加载时显示骨架屏
- [ ] **离线处理** - 网络错误时的友好提示
- [ ] **性能优化** - 使用图片懒加载

## 🔄 部署前检查

### 环境变量检查
```bash
# 检查必需的环境变量
echo $SUPABASE_URL
echo $SUPABASE_SERVICE_ROLE_KEY
```

### 构建优化检查
- [ ] **静态分析** - 使用 `npm run analyze` 分析包大小
- [ ] **未使用代码** - 检查并移除未使用的imports
- [ ] **图片优化** - 确保图片格式和大小合理
- [ ] **字体优化** - 使用Next.js字体优化

## 📊 性能监控

### Core Web Vitals
- **LCP (Largest Contentful Paint)** < 2.5s
- **FID (First Input Delay)** < 100ms  
- **CLS (Cumulative Layout Shift)** < 0.1

### 监控工具
```typescript
// 使用Next.js内置性能监控
export function reportWebVitals(metric) {
  console.log(metric)
}
```

---

## 🚨 重要提醒

**前端开发必须关注用户体验，每次修改都要考虑：**
1. **加载性能** - 是否影响页面加载速度
2. **交互体验** - 是否影响用户操作流畅度  
3. **视觉一致性** - 是否保持设计系统一致
4. **错误处理** - 是否有合适的错误提示

**违反以上任何一项都可能影响用户体验，必须立即修复！**
description:
globs:
alwaysApply: false
---
